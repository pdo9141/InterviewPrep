01) What are microservices? Self contained process that provides a unique business capability. An application is made up of various services communicating with each other through REST or message queues. The communication is almost always stateless.
	Each microservice can be written in any language you want. Each microservice is responsible for it's own data model and database. Take an online store for example, it can have microservices to process orders, recommendations, wishlists, 
	payment processing, gift cards, reviews, related items, affiliates, movies, music, inventory. They're esstentially mini applications performing a single business capability. Microservices make our system loosely coupled, 
	you can update, upgrade, repair, or replace a microservice we don't have to rebuild our entire application, just the microservice. Again, each microservice is responsible for a single business capability, is responsible for it's own
	datamodel and data store, communication should be stateless which means we can add more instances of the microservice at will, scaling effortlessly. Good microservices should be able to should be able to continue if another microservice fails.
	Expect the best but perpare for the worst, if you're trying to retrieve recommended suggestions from a microservice and it fails, have a default ready.
02) What is Docker? You can think of Docker as a lightweight virtual machine without having to install the OS. Every Docker instance runs on it's own virtualized file system, memory, CPU, storage. Different from VMs because you don't have to install
	the OS, drivers, etc. We can run many more Docker containers than VMs, you can have many Docker instances on one machine. Packaging an application means it should run the same locally as any other environment.
03) What is ASP.NET Core? Open source, cross-platform runtime (Linux, MacOS, Windows, Android, IOS, Blackberry), support multiple .NET implementations. Unify MVC and Web.API, now really the same thing. No need to compile code while developing.
	Runs on stripped down .NET Framework, new claims based security policy, better integration with Node.js. You now have project.json file where you tell .NET what framework(s) version to compile program against. Once you compile in command
	prompt, if you specified to build to multiple frameworks (4.5 and 5.0), you'll see two versions of the built DLLs in the bin directory.